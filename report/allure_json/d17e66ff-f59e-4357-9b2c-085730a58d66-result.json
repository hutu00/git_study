{"name": "生日超出当前时间", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}\n  Differing items:\n  {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}\n  {'code': 1010} != {'code': 1013}\n  Full diff:\n  - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}\n  + {'code': 1010, 'msg': '生日格式错误'}", "trace": "self = <autotest.testcases.test_business_register03.test_business_register03.TestRegister object at 0x000002832223B780>\ncase = <comms.excel_utils.CaseData object at 0x00000283221A1438>\n\n    @allure.severity(\"critical\")\n    @allure.description(\"商品注册模块接口测试用例\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='接口参数')\n    \n        uname = eval(case.case_data)[\"username\"]\n        email = eval(case.case_data)[\"email\"]\n        phone = eval(case.case_data)[\"phone\"]\n        # 正确流程\n        if case.case_id in (1, 3, 13, 28, 31, 36, 38):\n            self.db.cud('delete from tb_user where name = %s or email = %s or phone = %s;', (uname, email, phone))\n        if case.case_id == 6:  # 用户名已存在的场景\n            self.db.cud('delete from tb_user where email = %s or phone = %s;', (email, phone))\n        if case.case_id == 27:  # 手机号已存在的场景\n            self.db.cud('delete from tb_user where email = %s or name = %s;', (email, uname))\n        if case.case_id == 40:\n            self.db.cud('delete from tb_user where name = %s or phone = %s;', (uname, phone))\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res = response.json()\n        allure.attach(body=str(res), name='响应结果')\n    \n        try:\n            assert eval(case.expect) == res\n            # 数据验证\n            if case.case_id in (1, 3, 13, 28, 31, 36, 38):\n                count = self.db.find_count('select * from tb_user where name = %s;', (uname,))\n                assert count == 1\n        except AssertionError as e:\n            ReadExcel.write_data(DATA_FILE, 'business_register', case.case_id, 7, '失败')\n            logger.error('测试编号{},测试标题{},执行失败!实际结果{}'.format(case.case_id, case.case_title, res))\n            logger.exception(e)\n>           raise e\n\ntestcases\\test_business_register03\\test_business_register03.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <autotest.testcases.test_business_register03.test_business_register03.TestRegister object at 0x000002832223B780>\ncase = <comms.excel_utils.CaseData object at 0x00000283221A1438>\n\n    @allure.severity(\"critical\")\n    @allure.description(\"商品注册模块接口测试用例\")\n    @pytest.mark.parametrize(\"case\", cases)\n    def test_register(self, case):\n        allure.dynamic.title(case.case_title)\n        allure.attach(body=case.url, name='接口路径')\n        allure.attach(body=case.case_data, name='接口参数')\n    \n        uname = eval(case.case_data)[\"username\"]\n        email = eval(case.case_data)[\"email\"]\n        phone = eval(case.case_data)[\"phone\"]\n        # 正确流程\n        if case.case_id in (1, 3, 13, 28, 31, 36, 38):\n            self.db.cud('delete from tb_user where name = %s or email = %s or phone = %s;', (uname, email, phone))\n        if case.case_id == 6:  # 用户名已存在的场景\n            self.db.cud('delete from tb_user where email = %s or phone = %s;', (email, phone))\n        if case.case_id == 27:  # 手机号已存在的场景\n            self.db.cud('delete from tb_user where email = %s or name = %s;', (email, uname))\n        if case.case_id == 40:\n            self.db.cud('delete from tb_user where name = %s or phone = %s;', (uname, phone))\n    \n        response = requests.post(url=case.url, data=eval(case.case_data))\n        res = response.json()\n        allure.attach(body=str(res), name='响应结果')\n    \n        try:\n>           assert eval(case.expect) == res\nE           AssertionError: assert {'code': 1010...sg': '生日格式错误'} == {'code': 1013...、手机号、邮箱已经被注册'}\nE             Differing items:\nE             {'msg': '生日格式错误'} != {'msg': '该用户名、手机号、邮箱已经被注册'}\nE             {'code': 1010} != {'code': 1013}\nE             Full diff:\nE             - {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}\nE             + {'code': 1010, 'msg': '生日格式错误'}\n\ntestcases\\test_business_register03\\test_business_register03.py:61: AssertionError"}, "description": "商品注册模块接口测试用例", "attachments": [{"name": "接口路径", "source": "80c1dda4-a305-4073-8479-04dacdf5f491-attachment.attach"}, {"name": "接口参数", "source": "31fad3f8-b113-4170-8c9a-50017be42ae7-attachment.attach"}, {"name": "响应结果", "source": "109db866-ab0f-4b3e-b5be-08aeae03c937-attachment.attach"}, {"name": "log", "source": "9e540dee-45cd-42fe-8914-00a45235cf03-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "<comms.excel_utils.CaseData object at 0x00000283221A1438>"}], "start": 1646808781360, "stop": 1646808781514, "uuid": "4e4b8223-da93-4cce-a1e4-361d52356ed8", "historyId": "db27a575f85ffd03ea7f0ded69f472b5", "testCaseId": "e1bed1ad85377a572520a1ac2299b89d", "fullName": "testcases.test_business_register03.test_business_register03.TestRegister#test_register", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "商品注册模块"}, {"name": "parentSuite", "value": "testcases.test_business_register03"}, {"name": "suite", "value": "test_business_register03"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "DESKTOP-AM9Q0VH"}, {"name": "thread", "value": "10028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_business_register03.test_business_register03"}]}