DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_login HTTP/1.1" 200 130
DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_login HTTP/1.1" 200 130
DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_login HTTP/1.1" 200 130
DEBUG    urllib3.connectionpool:connectionpool.py:232 Starting new HTTP connection (1): 127.0.0.1:6666
DEBUG    urllib3.connectionpool:connectionpool.py:465 http://127.0.0.1:6666 "POST /business/token_goodsInfo HTTP/1.1" 200 1139
ERROR    root:test_business_token_goodsinfo03.py:91 测试编号4,测试标题商品信息查询—上一次token值,执行失败!实际结果{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': '预留数据', 'shopPrice': 100.0, 'promotePrice': 0.0, 'num': 1000}, {'goodsName': '小米手机', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'iphone5', 'shopPrice': 5000.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'iphone13', 'shopPrice': 5000.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '帝王蟹', 'shopPrice': 999.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '老八汉堡', 'shopPrice': 0.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '三文鱼', 'shopPrice': 99.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '华为P30', 'shopPrice': 59999.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'Mac pro', 'shopPrice': 9999.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': 'Mac口红', 'shopPrice': 178.0, 'promotePrice': 0.0, 'num': 999}, {'goodsName': '笔 记本 ', 'shopPrice': 5000.0, 'promotePrice': 0.0, 'num': 5000}, {'goodsName': '小忍者', 'shopPrice': 1999.0, 'promotePrice': 0.0, 'num': 99999}, {'goodsName': '金吉拉300', 'shopPrice': 15000.0, 'promotePrice': 0.0, 'num': 10}]}
ERROR    root:test_business_token_goodsinfo03.py:92 assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (111 lines hidden), use '-vv' to show
Traceback (most recent call last):
  File "D:\PythonWorkSpace\autotest\testcases\test_business_token_goodsinfo04\test_business_token_goodsinfo03.py", line 88, in test_goods_info
    assert eval(case.expect) == res
AssertionError: assert {'code': 1007...请检查token是否失效'} == {'code': 1000...'msg': '查询成功'}
  Differing items:
  {'msg': '鉴权失败,请检查token是否失效'} != {'msg': '查询成功'}
  {'code': 1007} != {'code': 1000}
  Right contains 1 more item:
  {'goods_tiems': [{'goodsName': '预留数据',
                    'num': 1000,
                    'promotePrice': 0.0,...
  
  ...Full output truncated (111 lines hidden), use '-vv' to show