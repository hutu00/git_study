{
  "uid" : "575be6d23075e67b",
  "name" : "test_register[case0]",
  "fullName" : "01test_pytest测试用例参数化.test_pytest_03.TestRegister#test_register",
  "historyId" : "645b6125b749f15bfd30be15845aee9a",
  "time" : {
    "start" : 1645788800868,
    "stop" : 1645788800874,
    "duration" : 6
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'code': 9999, 'msg': '注册成功'} == {'code': 1008...sg': '用户名已存在'}\n  Differing items:\n  {'msg': '注册成功'} != {'msg': '用户名已存在'}\n  {'code': 9999} != {'code': 1008}\n  Use -v to get the full diff",
  "statusTrace" : "self = <test_pytest_03.TestRegister object at 0x00000257700C54A8>\ncase = {'case_data': \"{'username':'xiaowu','password':'a123456','re_password':'a123456','email':'789@163.com','phone':'18688995566'}\", 'exp': '{\"code\": 9999, \"msg\": \"注册成功\"}'}\n\n    @pytest.mark.parametrize('case', cases)\n    def test_register(self, case):\n        response = requests.post(url=\"http://127.0.0.1:5000/register\",\n                                 data=eval(case[\"case_data\"]))\n        res = response.json()\n>       assert eval(case[\"exp\"]) == res\nE       AssertionError: assert {'code': 9999, 'msg': '注册成功'} == {'code': 1008...sg': '用户名已存在'}\nE         Differing items:\nE         {'msg': '注册成功'} != {'msg': '用户名已存在'}\nE         {'code': 9999} != {'code': 1008}\nE         Use -v to get the full diff\n\n..\\01test_pytest测试用例参数化\\test_pytest_03.py:37: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 1,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "01test_pytest测试用例参数化"
  }, {
    "name" : "suite",
    "value" : "test_pytest_03"
  }, {
    "name" : "subSuite",
    "value" : "TestRegister"
  }, {
    "name" : "host",
    "value" : "DESKTOP-AM9Q0VH"
  }, {
    "name" : "thread",
    "value" : "10384-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "01test_pytest测试用例参数化.test_pytest_03"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'case_data': \"{'username':'xiaowu','password':'a123456','re_password':'a123456','email':'789@163.com','phone':'18688995566'}\", 'exp': '{\"code\": 9999, \"msg\": \"注册成功\"}'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "fae1673c4f83d8d4",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert {'code': 9999, 'msg': '注册成功'} == {'code': 1008...sg': '用户名已存在'}\n  Differing items:\n  {'msg': '注册成功'} != {'msg': '用户名已存在'}\n  {'code': 9999} != {'code': 1008}\n  Use -v to get the full diff",
      "time" : {
        "start" : 1645783240790,
        "stop" : 1645783240797,
        "duration" : 7
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "575be6d23075e67b.json",
  "parameterValues" : [ "{'case_data': \"{'username':'xiaowu','password':'a123456','re_password':'a123456','email':'789@163.com','phone':'18688995566'}\", 'exp': '{\"code\": 9999, \"msg\": \"注册成功\"}'}" ]
}