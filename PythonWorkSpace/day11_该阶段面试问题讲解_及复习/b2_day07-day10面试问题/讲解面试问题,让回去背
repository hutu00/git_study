1、什么是面向对象?
面向对象是一种编程思想，目的是把现实生活中抽象复杂的业务逻辑转换成代码可以实现的类和对象的关系.python就是一门面向对象的编程语言
比如说python中的字符串就是str类的实例对象,python中的整数浮点数就是int类和float类的实例对象

2、面向对象的三大特征：封装、继承、多态、
封装:把常用的代码封装成类或函数,并且做相应的权限控制
继承:派生类继承基类,派生类就可以使用基类的所有的属性和方法,减少代码冗余,提高代码重用性
多态:派生类继承基类,派生类和基类具有相同的方法时,派生类可以调用基类的方法,基类也可以调用派生类的方法.但是python并没有完整的多态。
不允许基类调用派生类的方法

3、什么是组包和拆包：
python的一种打包机制,任意无符号对象以逗号隔开都会自动组包成一个元组
在可迭代对象前加 * 号,会把可迭代对象中的所有元素自动拆包成单个成员

4、global 和nonlocal
python中的变量作用域分为全局变量和局部变量,如果在函数内部想使用全局变量就需要使用global修饰
如果在内部嵌套函数中想使用外层函数的局部变量那么需要nonlocal修饰

5、值传递和引用传递：
值传递: 传递的是变量的值而非变量本身,被传递的变量的值不会被改变
引用传递: 传递的是变量本身,被传递的变量的值会被改变
在python里边
1、可变类型(list/dict/set为可变类型)用的是 引用传递
2、不可变类型(number/str/tuple)用的是 值传递

6、python函数中入参有哪些格式？
1、必须参数(位置参数) ：入参按照位置传递，在调用时入参的元素个数必须相同
2、默认参数  ：我们可以在声明方法的时候给入参设置默认值
3、不定长参数(可变参数) ：可以保存0-N个入参,一般使用 *args,调用该方法时如果传入多个入参，会自动组包为一个 元组。
4、关键字参数：关键字参数: 用来接收 key-value格式的入参,一般使用**kwargs保存为一个字典
多种参数混合的使用必须按照顺序放，不然报错。


7、*args和**kwargs的作用
　   他们两个在函数中作为入参声明的话,*args代表不定长参数 ：可以接收用户传入的多个入参，会自动组包为一个 元组。**kwargs作为入参的话，代表关键字参数，可以保存接收多个以key-value形式保存的入参。会自动将多组数据保存为一个字典。

8、装饰器是什么
装饰器一般是闭包函数,在不影响原函数功能的情况下,做了一些前置和后置的处理。实现了函数额外的功能

a = 100
a = print
a("hello world")


@print_test
def add(a,b):
    print(a+b)

我想要在调用add之前 打印到控制台 “开始调用add函数”    在add函数调用之后 打印到控制台 "调用结束"

def print_test(add):

    def add_print():
        print(“开始调用add函数”)
        add()
        print("调用结束")

    return add_print


9、你都用过哪些装饰器
@classmethod 来标识其为类方法
@staticmethod 来表示其为静态方法
@ddt 和@data，结合自动化的时候可以参数化测试数据。
@app.route() flask框架指定路由


10、什么是魔法方法：
python有一些特殊的方法，这些方法就会在特殊的情况下被python调用。比如构造方法__init__，就是在创建类对象的时候自动被调用。我们可以利用这个规则，在__init__方法中干一些事情，比如封装mysql操作，每次都要创建conn对象和cursour对象，我们可以在__init__方法中把这两个对象的创建过程写进去，这样每次只要创建这个类的对象，创建的这个对象就自动有了conn属性和cursor属性。还有很多魔法方法比如： __init__ \ __del__ \ __len__ \ __eq__等等。
23、python构造方法
方法名为： __init__ 会在创建类的时候自动执行，利用该特性，我们可以在创建实例对象的同时做一些操作


11、什么是Python面向对象呢？
面向对象我理解的还是 一切都是对象，比如我们在封装 pymysql读取excel的时候，
，会把这些文件看成一个对象(wk = openpyxl.load_workbook())进行解析,
在做接口自动化的时候，会把http请求看成一个对象，所以一切皆为对象。

13、python怎么定义一个函数，怎么定义一个类？
def 函数名:函数体
class 类名:属性,方法


14、什么是继承
继承是面向对象编程的一个重要的方式，通过继承，子类就可以使用父类的功能。python支持多继承，一个类可以继承多个父类。

15、方法重写/方法覆盖：
子类继承父类,子类和父类有相同的方法。

16、钻石继承是什么？
如果一个类继承多个父类，而这些父类又有很多的父类，这时候继承顺序就比较复杂，
钻石继承就是在这些父类中搜索内容的时候的一个顺序规则。我们可以打印__mro__属性的值来查看继承顺序。


17、进程、线程有什么区别？
进程想要执行任务就需要依赖线程。一个程序至少有一个进程,一个进程可以包含多个线程，比如启动qq等程序的时候，
qq会以多进程的方式运行。


18、什么是线程同步和异步：
同步就是顺序执行，执行完一个再执行下一个，需要等待。异步就是彼此独立,在等待某事件的过程中继续做自己的事，不需要等待这一事件完成后再工作。一般的接口都是同步顺序执行的，但是有
的接口做了异步处理，比如支付宝转账，有的时候你转账后发现短信提示的速度，和支付宝
提示几乎同时完成，像这种功能，其实这个支付接口内部是做了异步处理，短信发送采取的是
异步请求，这样效率会更高。
============================================================

19、什么是多线程？（了解）
多线程就是一个任务可以由多个线程同时运行，这样提高执行效率。
python中可以使用threading实现多线程，用threading.thread（）可以创建
多个线程，启动线程用 线程名.start()启动。
